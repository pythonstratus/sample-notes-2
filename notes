CREATE OR REPLACE PROCEDURE COMPARE_TABLES (
    p_dev_db_link    IN VARCHAR2,
    p_dev_table      IN VARCHAR2,
    p_prod_db_link   IN VARCHAR2,
    p_prod_table     IN VARCHAR2
)
AS
    v_dev_columns    VARCHAR2(4000);
    v_prod_columns   VARCHAR2(4000);
    v_common_cols    VARCHAR2(4000);
    v_dynamic_sql    VARCHAR2(32767);
    v_result_table   VARCHAR2(30) := 'TABLE_COMPARISON_RESULTS';
BEGIN
    -- Create result table if it doesn't exist
    BEGIN
        EXECUTE IMMEDIATE 'DROP TABLE ' || v_result_table;
    EXCEPTION
        WHEN OTHERS THEN NULL;
    END;
    
    EXECUTE IMMEDIATE 'CREATE TABLE ' || v_result_table || ' (
        comparison_type VARCHAR2(20),
        record_status VARCHAR2(50),
        column_name VARCHAR2(100),
        dev_value CLOB,
        prod_value CLOB,
        primary_key_info VARCHAR2(4000)
    )';

    -- Get column lists from both tables
    SELECT LISTAGG(column_name, ',') WITHIN GROUP (ORDER BY column_id)
    INTO v_dev_columns
    FROM ALL_TAB_COLUMNS@&p_dev_db_link
    WHERE table_name = UPPER(p_dev_table);

    SELECT LISTAGG(column_name, ',') WITHIN GROUP (ORDER BY column_id)
    INTO v_prod_columns
    FROM ALL_TAB_COLUMNS@&p_prod_db_link
    WHERE table_name = UPPER(p_prod_table);

    -- Get primary key columns
    WITH pk_columns AS (
        SELECT cols.column_name
        FROM ALL_CONSTRAINTS@&p_dev_db_link cons
        JOIN ALL_CONS_COLUMNS@&p_dev_db_link cols ON cons.constraint_name = cols.constraint_name
        WHERE cons.table_name = UPPER(p_dev_table)
        AND cons.constraint_type = 'P'
    )
    SELECT LISTAGG(column_name, ',') WITHIN GROUP (ORDER BY column_name)
    INTO v_common_cols
    FROM pk_columns;

    -- If no PK found, use all common columns
    IF v_common_cols IS NULL THEN
        WITH dev_cols AS (
            SELECT column_name, data_type
            FROM ALL_TAB_COLUMNS@&p_dev_db_link
            WHERE table_name = UPPER(p_dev_table)
        ),
        prod_cols AS (
            SELECT column_name, data_type
            FROM ALL_TAB_COLUMNS@&p_prod_db_link
            WHERE table_name = UPPER(p_prod_table)
        )
        SELECT LISTAGG(dev_cols.column_name, ',') WITHIN GROUP (ORDER BY dev_cols.column_name)
        INTO v_common_cols
        FROM dev_cols
        JOIN prod_cols ON dev_cols.column_name = prod_cols.column_name
        AND dev_cols.data_type = prod_cols.data_type;
    END IF;

    -- Compare structure
    INSERT INTO TABLE_COMPARISON_RESULTS
    WITH dev_columns AS (
        SELECT column_name, data_type, data_length
        FROM ALL_TAB_COLUMNS@&p_dev_db_link
        WHERE table_name = UPPER(p_dev_table)
    ),
    prod_columns AS (
        SELECT column_name, data_type, data_length
        FROM ALL_TAB_COLUMNS@&p_prod_db_link
        WHERE table_name = UPPER(p_prod_table)
    )
    SELECT 'STRUCTURE' as comparison_type,
           CASE 
               WHEN prod.column_name IS NULL THEN 'MISSING IN PROD'
               WHEN dev.column_name IS NULL THEN 'MISSING IN DEV'
               WHEN dev.data_type != prod.data_type OR dev.data_length != prod.data_length 
                    THEN 'DIFFERENT DEFINITION'
           END as record_status,
           COALESCE(dev.column_name, prod.column_name) as column_name,
           dev.data_type || '(' || dev.data_length || ')' as dev_value,
           prod.data_type || '(' || prod.data_length || ')' as prod_value,
           NULL as primary_key_info
    FROM dev_columns dev
    FULL OUTER JOIN prod_columns prod ON dev.column_name = prod.column_name
    WHERE dev.column_name IS NULL 
       OR prod.column_name IS NULL
       OR dev.data_type != prod.data_type 
       OR dev.data_length != prod.data_length;

    -- Compare data
    v_dynamic_sql := '
    INSERT INTO ' || v_result_table || '
    WITH dev_data AS (
        SELECT ' || v_common_cols || ', 
               ROWTOHEX(CAST(DBMS_CRYPTO.HASH(
                   UTL_RAW.CAST_TO_RAW(CONVERT(TO_CHAR(' || 
                   REPLACE(v_dev_columns, ',', ' || '','' || ') || 
                   '), ''AL32UTF8'', ''US7ASCII'')), 2) AS RAW(2000))) as row_hash
        FROM ' || p_dev_table || '@' || p_dev_db_link || '
    ),
    prod_data AS (
        SELECT ' || v_common_cols || ',
               ROWTOHEX(CAST(DBMS_CRYPTO.HASH(
                   UTL_RAW.CAST_TO_RAW(CONVERT(TO_CHAR(' || 
                   REPLACE(v_prod_columns, ',', ' || '','' || ') || 
                   '), ''AL32UTF8'', ''US7ASCII'')), 2) AS RAW(2000))) as row_hash
        FROM ' || p_prod_table || '@' || p_prod_db_link || '
    )
    SELECT ''DATA'' as comparison_type,
           CASE 
               WHEN prod.row_hash IS NULL THEN ''MISSING IN PROD''
               WHEN dev.row_hash IS NULL THEN ''MISSING IN DEV''
               WHEN dev.row_hash != prod.row_hash THEN ''DIFFERENT VALUES''
           END as record_status,
           NULL as column_name,
           CASE WHEN dev.' || REPLACE(v_common_cols, ',', ' IS NOT NULL THEN dev.') || ' END as dev_value,
           CASE WHEN prod.' || REPLACE(v_common_cols, ',', ' IS NOT NULL THEN prod.') || ' END as prod_value,
           ''PK: '' || ' || REPLACE(v_common_cols, ',', ' || '','''' || ') || ' as primary_key_info
    FROM dev_data dev
    FULL OUTER JOIN prod_data prod ON ' || 
    REPLACE(v_common_cols, ',', ' = prod.') || '
    WHERE dev.row_hash IS NULL 
       OR prod.row_hash IS NULL
       OR dev.row_hash != prod.row_hash';

    EXECUTE IMMEDIATE v_dynamic_sql;

    -- Output summary
    DBMS_OUTPUT.PUT_LINE('Comparison completed. Results stored in ' || v_result_table);
    DBMS_OUTPUT.PUT_LINE('To view results, run: SELECT * FROM ' || v_result_table || ' ORDER BY comparison_type, record_status;');

EXCEPTION
    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE('Error: ' || SQLERRM);
        RAISE;
END COMPARE_TABLES;
/

-- Example usage:
-- EXEC COMPARE_TABLES('DEV_LINK', 'EMPLOYEES', 'PROD_LINK', 'EMPLOYEES');

-- To view results:
-- SELECT * FROM TABLE_COMPARISON_RESULTS ORDER BY comparison_type, record_status;
