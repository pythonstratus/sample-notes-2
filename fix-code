@Override
public RepeatStatus execute(StepContribution contribution, ChunkContext chunkContext) throws Exception {
    String loadName = entityName;
    String me = System.getProperty("user.name");
    LocalDateTime loadDateTime = DateUtil.getCurrentDateTime();
    LocalDateTime extrDt = jdbcTemplate.queryForObject(
            "SELECT " + extractColumn + " FROM " + tableName + " WHERE ROWNUM = 1", LocalDateTime.class);
    Integer numRecs = jdbcTemplate.queryForObject("SELECT count(*) FROM " + tableName, Integer.class);
    
    try {
        // Try the original insert
        String sql = "INSERT into LOGLOD (LOADNAME, EXTDT, LOADDT, NUMREC) values (?,?,?,?)";
        jdbcTemplate.update(sql, loadName, Timestamp.valueOf(extrDt), Timestamp.valueOf(loadDateTime), numRecs);
    } catch (Exception e) {
        // If insert fails, try update instead
        if (e.toString().contains("Duplicate") || e.toString().contains("ASSERT")) {
            log.info("Record already exists, attempting update instead");
            jdbcTemplate.update(
                "UPDATE LOGLOD SET LOADDT = ?, NUMREC = ? WHERE LOADNAME = ? AND EXTDT = ?",
                Timestamp.valueOf(loadDateTime), numRecs, loadName, Timestamp.valueOf(extrDt));
        } else {
            // If it's a different error, rethrow it
            throw e;
        }
    }
    
    return RepeatStatus.FINISHED;
}


@Bean
public Step createLogLoadRecordE5Step(JobRepository jobRepository, PlatformTransactionManager transactionManager) {
    return new StepBuilder("createLogLoadRecordE5Step", jobRepository)
        .tasklet(new CreateLogLoadRecordTasklet(jdbcTemplate, entityName, "ES", extractColumn, "ENTEXTRACT", tableName, "ESTIMP"), transactionManager)
        .build();
}
