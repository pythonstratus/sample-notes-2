@Override
public void afterJob(JobExecution jobExecution) {
    String jobName = jobExecution.getJobInstance().getJobName();
    String jobCode = jobContext.getJobCode();
    String jobType = jobContext.getJobType();
    String jobCategory = "ICS " + jobType;
    
    JobStatus jobStatus = new JobStatus();
    jobStatus.setExtractName(mapJobCodeToExtractName(jobCode));
    jobStatus.setStartDate(jobExecution.getStartTime());
    jobStatus.setStopDate(jobExecution.getEndTime());
    jobStatus.setStatus(String.valueOf(jobExecution.getStatus()));
    jobStatus.setJobCategory(jobCategory);
    jobStatus.setFrequency(jobType);
    jobStatus.setSteps(jobCode);
    
    // log.info("Saving Job Status: {}", jobStatus);
    
    if (jobExecution.getStatus() == BatchStatus.FAILED) {
        log.error(format("Job {} failed with the following exceptions:", jobName));
        jobExecution.getAllFailureExceptions()
                .forEach(ex -> log.error(format("Exception: {}", ex.getMessage())));
        
        if(JOB_CODES.contains(jobCode)){
            try {
                // Check if record already exists
                String checkSql = "SELECT COUNT(*) FROM job_status WHERE extract_name = ?";
                Integer existingCount = jdbcTemplate.queryForObject(checkSql, Integer.class, jobStatus.getExtractName());
                
                if (existingCount != null && existingCount > 0) {
                    // Update existing record
                    log.info("Updating existing job status record for: {}", jobStatus.getExtractName());
                    jdbcTemplate.update(
                        "UPDATE job_status SET status = ?, start_date = ?, stop_date = ? WHERE extract_name = ?",
                        jobStatus.getStatus(), jobStatus.getStartDate(), jobStatus.getStopDate(), jobStatus.getExtractName()
                    );
                } else {
                    // Insert new record
                    jobStatusRepository.save(jobStatus);
                }
            } catch (Exception e) {
                log.error(format("Error saving job status: {}", e.getMessage()));
            }
        }
    } else if (isImportJob(jobName)) {
        // Same code as above for this section as well...
        String tableName = jobCode + "TMP";
        String sql = String.format("SELECT count(*) FROM %s", tableName);
        log.info(format("Count Query: {}", sql));
        Long count = jdbcTemplate.queryForObject(sql, Long.class);
        log.info(format("!!! {} JOB {} is FINISHED! Number of records loaded for {}: {}", jobType, jobName, jobCode, count));
        
        // Check if record exists before saving
        String checkSql = "SELECT COUNT(*) FROM job_status WHERE extract_name = ?";
        Integer existingCount = jdbcTemplate.queryForObject(checkSql, Integer.class, jobStatus.getExtractName());
        
        if (existingCount != null && existingCount > 0) {
            // Update existing record
            log.info("Updating existing job status record for: {}", jobStatus.getExtractName());
            jdbcTemplate.update(
                "UPDATE job_status SET status = ?, start_date = ?, stop_date = ?, records_loaded = ? WHERE extract_name = ?",
                jobStatus.getStatus(), jobStatus.getStartDate(), jobStatus.getStopDate(), String.valueOf(count), jobStatus.getExtractName()
            );
        } else {
            // Set records loaded and save
            jobStatus.setRecordsLoaded(String.valueOf(count));
            jobStatusRepository.save(jobStatus);
        }
    } else if (isProcessJob(jobName) && JOB_CODES.contains(jobCode)) {
        // Apply the same pattern here too
        Long jobCount = jdbcTemplate.queryForObject(
                "SELECT NUMREC FROM LOGLOD WHERE LOADNAME = ? AND TRUNC(LOADDT) = TRUNC(SYSDATE) ORDER BY LOADDT DESC FETCH FIRST 1 ROWS ONLY",
                Long.class,
                jobCode);
        
        jobStatus.setRecordsLoaded(String.valueOf(jobCount));
        
        // Check if record exists before saving
        String checkSql = "SELECT COUNT(*) FROM job_status WHERE extract_name = ?";
        Integer existingCount = jdbcTemplate.queryForObject(checkSql, Integer.class, jobStatus.getExtractName());
        
        if (existingCount != null && existingCount > 0) {
            // Update existing record
            log.info("Updating existing job status record for: {}", jobStatus.getExtractName());
            jdbcTemplate.update(
                "UPDATE job_status SET status = ?, start_date = ?, stop_date = ?, records_loaded = ? WHERE extract_name = ?",
                jobStatus.getStatus(), jobStatus.getStartDate(), jobStatus.getStopDate(), String.valueOf(jobCount), jobStatus.getExtractName()
            );
        } else {
            try {
                jobStatusRepository.save(jobStatus);
            } catch (Exception e) {
                log.error(format("Error saving job status: {}", e.getMessage()));
            }
        }
        
        log.info(format("!!! JOB {} is FINISHED!!!", jobName));
    } else {
        log.info(format("!!! JOB {} is FINISHED!!!", jobName));
    }
    
    JobContext.clear();
}
