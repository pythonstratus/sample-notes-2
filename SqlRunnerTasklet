package com.example.e1processor;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.batch.core.StepContribution;
import org.springframework.batch.core.scope.context.ChunkContext;
import org.springframework.batch.core.step.tasklet.Tasklet;
import org.springframework.batch.repeat.RepeatStatus;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.jdbc.core.JdbcTemplate;

/**
 * Tasklet for executing SQL statements in a Spring Batch step
 */
public class SqlRunnerTasklet implements Tasklet {
    private static final Logger log = LoggerFactory.getLogger(SqlRunnerTasklet.class);
    
    @Autowired
    private JdbcTemplate jdbcTemplate;
    
    private final String sql;
    private final String description;
    
    /**
     * Constructor
     * @param sql The SQL statement to execute
     * @param description Description for logging
     */
    public SqlRunnerTasklet(String sql, String description) {
        this.sql = sql;
        this.description = description;
    }
    
    @Override
    public RepeatStatus execute(StepContribution contribution, ChunkContext chunkContext) throws Exception {
        log.info("Executing SQL: {}", description);
        
        try {
            jdbcTemplate.execute(sql);
            log.info("SQL execution completed: {}", description);
        } catch (Exception e) {
            log.error("Error executing SQL: {}", description, e);
            throw e;
        }
        
        return RepeatStatus.FINISHED;
    }
}
