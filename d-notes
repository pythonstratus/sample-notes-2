I can see the questions in the Notepad++ window, and here are the answers:

1. **Would we run setup_als_roles multiple times on the various objects?**
   No, you don't need to run setup_als_roles multiple times for various objects. The procedure is designed to create the role only once and then grant permissions on specified tables. If you need to add permissions for additional tables, you should modify the procedure to handle multiple objects rather than running it multiple times.

2. **Are we able to increase the amount of tables assigned to the als_user_role after the user creation?**
   Yes, absolutely. The role-based approach is specifically designed for this flexibility. After users are created, you can grant additional privileges to the als_user_role, and all users with that role will automatically receive those new permissions. This is one of the main advantages of using roles.

3. **Can we run the setup_als_roles procedure from ALS user?**
   No, the setup_als_roles procedure requires elevated privileges (CREATE ROLE, GRANT) that a standard ALS user would not have. This procedure should be run by a DBA or another user with administrative privileges. Regular users like those created through this process wouldn't have sufficient permissions to create roles or grant object privileges.

To properly extend the role's permissions later, a DBA would need to execute:

```sql
GRANT SELECT, INSERT, DELETE ON [new_schema].[new_table] TO als_user_role;
```

This is much more efficient than granting permissions individually to each user.
