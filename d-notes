# Summary: Resolving the timestart/timeend Variable Issue in c.runARCHIVEINV

## Problem Identified
After analyzing the code in both c.runARCHIVEINV (shell script) and mk_arch_INV.sql (SQL script), we've identified a variable naming inconsistency causing "table mismatch" errors during testing. The shell script correctly sets and passes `STRTDT` and `ENDDT` variables, but some sections of the SQL script are attempting to reference undefined variables named `timestart` and `timeend`.

## Root Cause
- The shell script retrieves date parameters from the ENTMONTH table and sets variables `STRTDT` and `ENDDT`
- These are properly bound to `:startdt` and `:enddt` in many sections of the SQL code
- However, some SQL queries are incorrectly referencing `:timestart` and `:timeend` variables that were never defined
- This mismatch is causing SQL execution errors when those sections run

## Recommended Solution
We have two options to fix this:

### Option 1: SQL Script Modification (Recommended)
- Search for all occurrences of `:timestart` and `:timeend` in mk_arch_INV.sql
- Replace them with `:startdt` and `:enddt` respectively to match the variables being passed
- This is the cleaner approach requiring fewer changes

### Option 2: Shell Script Modification
- Add additional variables `timestart` and `timeend` in the shell script as aliases
- Ensure these new variables are properly passed to the SQL script
- This approach requires more changes but might be preferable if SQL modification is restricted

## Implementation Approach
1. Make a backup of both scripts before modifications
2. Implement the changes (preferably Option 1)
3. Test with a small dataset to verify fixes
4. Deploy during a maintenance window
5. Document the changes for future reference

This solution directly addresses the variable inconsistency issue identified in Story 1696745 regarding the rollback when job fails, while minimizing changes to the codebase.
