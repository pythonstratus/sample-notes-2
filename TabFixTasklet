package com.example.e1processor;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.batch.core.StepContribution;
import org.springframework.batch.core.scope.context.ChunkContext;
import org.springframework.batch.core.step.tasklet.Tasklet;
import org.springframework.batch.repeat.RepeatStatus;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.jdbc.core.JdbcTemplate;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.nio.file.Files;
import java.nio.file.Paths;

/**
 * Tasklet for removing tab characters from E1TMP table
 */
public class TabFixTasklet implements Tasklet {
    private static final Logger log = LoggerFactory.getLogger(TabFixTasklet.class);
    
    @Autowired
    private JdbcTemplate jdbcTemplate;
    
    @Value("${app.tmp.tab.fix.script:}")
    private String tabFixScriptLocation;
    
    @Value("${app.use.direct.sql:true}")
    private boolean useDirectSql;
    
    @Override
    public RepeatStatus execute(StepContribution contribution, ChunkContext chunkContext) throws Exception {
        log.info("Removing tab characters from E1TMP");
        
        if (useDirectSql || tabFixScriptLocation == null || tabFixScriptLocation.isEmpty()) {
            // Use direct SQL statements
            executeTabFixSql();
        } else {
            // Execute external script
            executeTabFixScript();
        }
        
        log.info("Tab characters removed from E1TMP");
        return RepeatStatus.FINISHED;
    }
    
    /**
     * Execute SQL statements to replace tab characters
     */
    private void executeTabFixSql() {
        // Update statements to replace tab characters (CHR(9)) with spaces
        jdbcTemplate.execute(
            "UPDATE E1TMP SET " +
            "TXPYRLN1NM = REPLACE(TXPYRLN1NM, CHR(9), ' '), " +
            "TXPYRLN2NM = REPLACE(TXPYRLN2NM, CHR(9), ' '), " +
            "LNADDRESS = REPLACE(LNADDRESS, CHR(9), ' '), " +
            "CITYNM = REPLACE(CITYNM, CHR(9), ' ')"
        );
    }
    
    /**
     * Execute the external tab fix script
     */
    private void executeTabFixScript() throws IOException, InterruptedException {
        if (!Files.exists(Paths.get(tabFixScriptLocation))) {
            log.warn("Tab fix script not found at: {}. Using SQL instead.", tabFixScriptLocation);
            executeTabFixSql();
            return;
        }
        
        log.info("Executing tab fix script: {}", tabFixScriptLocation);
        
        ProcessBuilder processBuilder = new ProcessBuilder(tabFixScriptLocation);
        processBuilder.redirectErrorStream(true);
        
        Process process = processBuilder.start();
        
        // Log script output
        try (BufferedReader reader = new BufferedReader(new InputStreamReader(process.getInputStream()))) {
            String line;
            while ((line = reader.readLine()) != null) {
                log.info("Script output: {}", line);
            }
        }
        
        int exitCode = process.waitFor();
        
        if (exitCode != 0) {
            log.error("Tab fix script exited with code: {}", exitCode);
            throw new RuntimeException("Tab fix script failed with exit code: " + exitCode);
        }
    }
}
