#!/bin/bash

# Script to organize tda and tdi files into numbered folders
# Input directory containing the files
INPUT_DIR="/eftu/entity/incoming"

# Check if input directory exists
if [ ! -d "$INPUT_DIR" ]; then
    echo "Error: Input directory $INPUT_DIR does not exist"
    exit 1
fi

# Change to the input directory
cd "$INPUT_DIR" || exit 1

echo "Starting file organization in $INPUT_DIR"
echo "----------------------------------------"

# Process all tdi and tda files (case insensitive), excluding .tar files
for file in *; do
    # Skip if no files match or if it's a directory
    [ ! -f "$file" ] && continue
    
    # Skip .tar files
    if [[ $file == *.tar ]]; then
        echo "Skipping tar file: $file"
        continue
    fi
    
    # Match pattern: TDA.XX or tdi.XX (case insensitive)
    if [[ $file =~ ^([Tt][Dd][IiAa])\.([0-9]+)$ ]]; then
        file_type=$(echo "${BASH_REMATCH[1]}" | tr '[:upper:]' '[:lower:]')  # Convert to lowercase
        number="${BASH_REMATCH[2]}"
        
        echo "Processing: $file -> Type: $file_type, Number: $number"
        
        # Create the numbered directory if it doesn't exist
        if [ ! -d "$number" ]; then
            mkdir -p "$number"
            echo "  Created directory: $number"
        fi
        
        # Move and rename the file
        new_filename="${file_type}.raw"
        
        if [ -f "$number/$new_filename" ]; then
            echo "  Warning: $number/$new_filename already exists, backing up as ${new_filename}.backup"
            mv "$number/$new_filename" "$number/${new_filename}.backup"
        fi
        
        mv "$file" "$number/$new_filename"
        echo "  Moved: $file -> $number/$new_filename"
        
    else
        echo "Skipping file (doesn't match tda.XX or tdi.XX pattern): $file"
    fi
done

echo "----------------------------------------"
echo "File organization complete!"
echo ""
echo "Summary:"
echo "- Source files preserved in: $INPUT_DIR"
echo "- Organized files copied to: $OUTPUT_DIR"
echo "- Backups stored in: $BACKUP_DIR"
echo "- Run timestamp: $TIMESTAMP"
echo ""
echo "Final directory structure in $OUTPUT_DIR:"
for dir in "$OUTPUT_DIR"/*/; do
    if [[ -d "$dir" ]] && [[ $(basename "$dir") =~ ^[0-9]+$ ]]; then
        echo "  $(basename "$dir")/"
        ls -la "$dir" | grep -E "\.(raw|backup|[0-9]{8}_[0-9]{6})$" | awk '{print "    " $9 " (" $5 " bytes)"}'
    fi
done

echo ""
echo "Backup folders created this run:"
if [ -d "$BACKUP_DIR" ]; then
    ls -la "$BACKUP_DIR" | grep "_${TIMESTAMP}$" | awk '{print "  " $9}'
fi

echo ""
echo "Files that were not processed:"
for file in *; do
    [ ! -f "$file" ] && continue
    if [[ ! $file =~ ^([Tt][Dd][IiAa])\.([0-9]+)$ ]] && [[ $file != *.tar ]]; then
        echo "  $file"
    fi
done
