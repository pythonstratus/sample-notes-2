#!/bin/bash

# Script to organize tda and tdi files into numbered folders (Weekly run)
# Input directory containing the files
INPUT_DIR="/eftu/entity/incoming"
# Output directory where organized folders will be moved
OUTPUT_DIR="/entity/dial/current_extracts"
# Backup directory for existing folders
BACKUP_DIR="/entity/dial/previous_extracts"
# Timestamp for this run
TIMESTAMP=$(date +"%Y%m%d_%H%M%S")

# Check if input directory exists
if [ ! -d "$INPUT_DIR" ]; then
    echo "Error: Input directory $INPUT_DIR does not exist"
    exit 1
fi

# Check if output directory exists, create if it doesn't
if [ ! -d "$OUTPUT_DIR" ]; then
    echo "Creating output directory: $OUTPUT_DIR"
    mkdir -p "$OUTPUT_DIR"
fi

# Create backup directory if it doesn't exist
if [ ! -d "$BACKUP_DIR" ]; then
    echo "Creating backup directory: $BACKUP_DIR"
    mkdir -p "$BACKUP_DIR"
fi

# Change to the input directory
cd "$INPUT_DIR" || exit 1

echo "Starting file organization in $INPUT_DIR"
echo "Timestamp: $TIMESTAMP"
echo "Output directory: $OUTPUT_DIR"
echo "----------------------------------------"

# Process all tdi and tda files (case insensitive), excluding .tar files
for file in *; do
    # Skip if no files match or if it's a directory
    [ ! -f "$file" ] && continue
    
    # Skip .tar files
    if [[ $file == *.tar ]]; then
        echo "Skipping tar file: $file"
        continue
    fi
    
    # Match pattern: TDA.XX or tdi.XX (case insensitive)
    if [[ $file =~ ^([Tt][Dd][IiAa])\.([0-9]+)$ ]]; then
        file_type=$(echo "${BASH_REMATCH[1]}" | tr '[:upper:]' '[:lower:]')  # Convert to lowercase
        number="${BASH_REMATCH[2]}"
        
        echo "Processing: $file -> Type: $file_type, Number: $number"
        
        # Create the numbered directory and DIALDIR subdirectory in OUTPUT_DIR if it doesn't exist
        dialdir_path="$OUTPUT_DIR/$number/DIALDIR"
        if [ ! -d "$dialdir_path" ]; then
            mkdir -p "$dialdir_path"
            echo "  Created directory: $dialdir_path"
        fi
        
        # Copy and rename the file directly to OUTPUT_DIR/number/DIALDIR
        new_filename="${file_type}.raw"
        
        if [ -f "$dialdir_path/$new_filename" ]; then
            echo "  Warning: $dialdir_path/$new_filename already exists, creating timestamped version"
            cp "$file" "$dialdir_path/${new_filename}.${TIMESTAMP}"
            echo "  Copied: $file -> $dialdir_path/${new_filename}.${TIMESTAMP} (original preserved)"
        else
            cp "$file" "$dialdir_path/$new_filename"
            echo "  Copied: $file -> $dialdir_path/$new_filename (original preserved)"
        fi
        
    else
        echo "Skipping file (doesn't match tda.XX or tdi.XX pattern): $file"
    fi
done

echo "----------------------------------------"
echo "File organization complete!"
echo ""
echo "Summary:"
echo "- Source files preserved in: $INPUT_DIR"
echo "- Organized files copied to: $OUTPUT_DIR"
echo "- Backups stored in: $BACKUP_DIR"
echo "- Run timestamp: $TIMESTAMP"
echo ""
echo "Final directory structure in $OUTPUT_DIR:"
for dir in "$OUTPUT_DIR"/*/; do
    if [[ -d "$dir" ]] && [[ $(basename "$dir") =~ ^[0-9]+$ ]]; then
        echo "  $(basename "$dir")/"
        if [[ -d "$dir/DIALDIR" ]]; then
            echo "    DIALDIR/"
            ls -la "$dir/DIALDIR" | grep -E "\.(raw|backup|[0-9]{8}_[0-9]{6})$" | awk '{print "      " $9 " (" $5 " bytes)"}'
        fi
    fi
done

echo ""
echo "Backup folders created this run:"
if [ -d "$BACKUP_DIR" ]; then
    ls -la "$BACKUP_DIR" | grep "_${TIMESTAMP}$" | awk '{print "  " $9}'
fi

echo ""
echo "Files that were not processed:"
for file in *; do
    [ ! -f "$file" ] && continue
    if [[ ! $file =~ ^([Tt][Dd][IiAa])\.([0-9]+)$ ]] && [[ $file != *.tar ]]; then
        echo "  $file"
    fi
done
